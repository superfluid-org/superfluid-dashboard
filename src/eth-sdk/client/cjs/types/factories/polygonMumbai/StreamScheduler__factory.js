"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamScheduler__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IConstantFlowAgreementV1",
                name: "cfa",
                type: "address",
            },
            {
                internalType: "contract ISuperfluid",
                name: "host",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "AccountInvalid",
        type: "error",
    },
    {
        inputs: [],
        name: "StreamOrderInvalid",
        type: "error",
    },
    {
        inputs: [],
        name: "TimeWindowInvalid",
        type: "error",
    },
    {
        inputs: [],
        name: "UserDataInvalid",
        type: "error",
    },
    {
        inputs: [],
        name: "ZeroAddress",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: true,
                internalType: "contract ISuperToken",
                name: "superToken",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "startDate",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "startDuration",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "int96",
                name: "flowRate",
                type: "int96",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "endDate",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "userData",
                type: "bytes",
            },
        ],
        name: "CreateStreamOrder",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: true,
                internalType: "contract ISuperToken",
                name: "superToken",
                type: "address",
            },
        ],
        name: "DeleteStreamOrder",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "contract ISuperToken",
                name: "superToken",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "startDate",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "startDuration",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "int96",
                name: "flowRate",
                type: "int96",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "userData",
                type: "bytes",
            },
        ],
        name: "ExecuteCreateStream",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "contract ISuperToken",
                name: "superToken",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "endDate",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "userData",
                type: "bytes",
            },
        ],
        name: "ExecuteDeleteStream",
        type: "event",
    },
    {
        inputs: [],
        name: "cfaV1",
        outputs: [
            {
                internalType: "contract ISuperfluid",
                name: "host",
                type: "address",
            },
            {
                internalType: "contract IConstantFlowAgreementV1",
                name: "cfa",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "contract ISuperToken",
                name: "superToken",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "startDate",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "startDuration",
                type: "uint32",
            },
            {
                internalType: "int96",
                name: "flowRate",
                type: "int96",
            },
            {
                internalType: "uint32",
                name: "endDate",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "userData",
                type: "bytes",
            },
        ],
        name: "createStreamOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "contract ISuperToken",
                name: "superToken",
                type: "address",
            },
        ],
        name: "deleteStreamOrder",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "contract ISuperToken",
                name: "superToken",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "userData",
                type: "bytes",
            },
        ],
        name: "executeCreateStream",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "contract ISuperToken",
                name: "superToken",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "userData",
                type: "bytes",
            },
        ],
        name: "executeDeleteStream",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "address",
                name: "supertoken",
                type: "address",
            },
        ],
        name: "getStreamOrders",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "startDate",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "startDuration",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "endDate",
                        type: "uint32",
                    },
                    {
                        internalType: "int96",
                        name: "flowRate",
                        type: "int96",
                    },
                    {
                        internalType: "bytes32",
                        name: "userData",
                        type: "bytes32",
                    },
                ],
                internalType: "struct IStreamScheduler.Order",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "streamOrders",
        outputs: [
            {
                internalType: "uint32",
                name: "startDate",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "startDuration",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "endDate",
                type: "uint32",
            },
            {
                internalType: "int96",
                name: "flowRate",
                type: "int96",
            },
            {
                internalType: "bytes32",
                name: "userData",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class StreamScheduler__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.StreamScheduler__factory = StreamScheduler__factory;
StreamScheduler__factory.abi = _abi;
