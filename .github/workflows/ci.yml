name: Dev CI/CD

on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]

jobs:

  prepare: # https://github.com/cypress-io/github-action#robust-custom-build-id
    runs-on: ubuntu-latest
    outputs:
      uuid: ${{ steps.uuid.outputs.value }}
    steps:
      - name: Generate unique ID ðŸ’Ž
        id: uuid
        run: echo "::set-output name=value::sha-$GITHUB_SHA-time-$(date +"%s")"

  test-suites-setup:
    if: ${{ !github.event.pull_request.draft }}
    needs: ["prepare"]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    container:
      image: cypress/browsers:node16.5.0-chrome97-ff96
      options: --user 1001
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install dependencies
        uses: cypress-io/github-action@v4
        with:
          runTests: false
          build: yarn build #https://docs.cypress.io/guides/continuous-integration/github-actions#Install-Job
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

      - name: Wait for Netlify
        uses: probablyup/wait-for-netlify-action@3.2.0 # Check the source code before updating version because it uses personal Netlify access token which does not have granular access control.
        id: waitForDeployment
        with:
          site_id: "aa82cf1e-ce5d-432f-99bf-77a0b8c13277"
        env:
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}

      - name: Save build folder
        uses: actions/upload-artifact@v2
        with:
          name: build
          if-no-files-found: error
          path: build

  chrome-tests:
    runs-on: ubuntu-latest
    needs: ["test-suites-setup"]
    timeout-minutes: 60
    container:
      image: cypress/browsers:node16.5.0-chrome97-ff96
      options: --user 1001
    strategy:
      fail-fast: false
      matrix:
        containers: [ 1, 2, 3, 4, 5 ]
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: Cypress Chrome tests
        uses: cypress-io/github-action@v4
        with:
          install: false
          browser: chrome
          group: chrome
          parallel: true
          wait-on: ${{ steps.waitForDeployment.outputs.url }}
          wait-on-timeout: 180
          record: true
          ci-build-id: ${{ needs.prepare.outputs.uuid }}
          env: STATIC_BALANCE_ACCOUNT_PRIVATE_KEY=${{ secrets.STATIC_BALANCE_ACCOUNT_PRIVATE_KEY }},ONGOING_STREAM_ACCOUNT_PRIVATE_KEY=${{ secrets.ONGOING_STREAM_ACCOUNT_PRIVATE_KEY }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.V2_CYPRESS_RECORD_KEY }}
          CYPRESS_baseUrl: ${{ steps.waitForDeployment.outputs.url }}


  firefox-tests:
    runs-on: ubuntu-latest
    needs: ["test-suites-setup"]
    timeout-minutes: 60
    container:
      image: cypress/browsers:node16.5.0-chrome97-ff96
      options: --user 1001
    strategy:
      fail-fast: false
      matrix:
        containers: [ 1, 2, 3, 4, 5 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: Setup firefox
        uses: browser-actions/setup-firefox@latest

      - name: Cypress Firefox tests
        uses: cypress-io/github-action@v4
        with:
          install: false
          browser: firefox
          group: firefox
          parallel: true
          wait-on: ${{ steps.waitForDeployment.outputs.url }}
          wait-on-timeout: 180
          record: true
          ci-build-id: ${{ needs.prepare.outputs.uuid }}
          env: STATIC_BALANCE_ACCOUNT_PRIVATE_KEY=${{ secrets.STATIC_BALANCE_ACCOUNT_PRIVATE_KEY }},ONGOING_STREAM_ACCOUNT_PRIVATE_KEY=${{ secrets.ONGOING_STREAM_ACCOUNT_PRIVATE_KEY }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.V2_CYPRESS_RECORD_KEY }}
          CYPRESS_baseUrl: ${{ steps.waitForDeployment.outputs.url }}

